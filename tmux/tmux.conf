# =====================================
# TMUX CONFIGURATION - EXACT ZELLIJ KEYBINDS
# =====================================

# Basic Settings
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",xterm-ghostty:Tc:RGB"
set -g mouse on

# Set cursor style - use thin beam cursor
set -ga terminal-overrides ',*:Ss=\E[6 q:Se=\E[6 q'
set -g escape-time 0
set -g focus-events on
set -g history-limit 50000

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# =====================================
# BORDERLESS PANES
# =====================================
set -g pane-border-style "fg=colour235"
set -g pane-active-border-style "fg=colour235"
set -g window-style "fg=default,bg=default"
set -g window-active-style "fg=default,bg=default"

# =====================================
# EXACT ZELLIJ KEYBINDS
# =====================================

# Remove default prefix and set new one
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# =====================================
# NORMAL MODE (shared_except bindings)
# =====================================

# Normal mode navigation (Ctrl-Shift-hjkl) - Focus or Tab
bind-key -n C-S-h if -F '#{pane_at_left}' 'previous-window' 'run-shell "~/.config/tmux/scripts/smart-select-pane.sh L"'
bind-key -n C-S-j run-shell '~/.config/tmux/scripts/smart-select-pane.sh D'
bind-key -n C-S-k run-shell '~/.config/tmux/scripts/smart-select-pane.sh U'
bind-key -n C-S-l if -F '#{pane_at_right}' 'next-window' 'run-shell "~/.config/tmux/scripts/smart-select-pane.sh R"'

# Mode switching (exact zellij bindings)
bind-key -n C-S-p switch-client -T pane-mode \; refresh-client -S
bind-key -n C-S-t switch-client -T tab-mode \; refresh-client -S
bind-key -n C-S-r switch-client -T resize-mode \; refresh-client -S
bind-key -n C-S-o switch-client -T session-mode \; refresh-client -S
bind-key -n C-S-m switch-client -T scroll-mode \; refresh-client -S
bind-key -n C-b switch-client -T tmux-mode \; refresh-client -S
bind-key -n C-S-g switch-client -T locked-mode \; refresh-client -S

# Other normal mode bindings
bind-key -n C-S-f run-shell "echo 'Float toggle not available in tmux'"
bind-key -n C-S-q kill-session

# =====================================
# PANE MODE (exact zellij pane bindings)
# =====================================
bind-key -T pane-mode Left run-shell '~/.config/tmux/scripts/smart-select-pane.sh L'
bind-key -T pane-mode Down run-shell '~/.config/tmux/scripts/smart-select-pane.sh D'
bind-key -T pane-mode Up run-shell '~/.config/tmux/scripts/smart-select-pane.sh U'
bind-key -T pane-mode Right run-shell '~/.config/tmux/scripts/smart-select-pane.sh R'
bind-key -T pane-mode h run-shell '~/.config/tmux/scripts/smart-select-pane.sh L'
bind-key -T pane-mode j run-shell '~/.config/tmux/scripts/smart-select-pane.sh D'
bind-key -T pane-mode k run-shell '~/.config/tmux/scripts/smart-select-pane.sh U'
bind-key -T pane-mode l run-shell '~/.config/tmux/scripts/smart-select-pane.sh R'
bind-key -T pane-mode n split-window -h -c "#{pane_current_path}"
bind-key -T pane-mode p select-pane -l
bind-key -T pane-mode s split-window -h -c "#{pane_current_path}"
bind-key -T pane-mode v split-window -v -c "#{pane_current_path}"
bind-key -T pane-mode x kill-pane
bind-key -T pane-mode f run-shell '~/.config/tmux/scripts/toggle-fullscreen.sh'
bind-key -T pane-mode w run-shell "echo 'Floating panes not available in tmux'"
bind-key -T pane-mode e run-shell "echo 'Embed/Float not available in tmux'"
bind-key -T pane-mode z run-shell 'tmux set pane-border-status #{?#{==:#{pane-border-status},off},top,off}'
bind-key -T pane-mode c command-prompt "select-pane -T '%%'"
bind-key -T pane-mode Escape switch-client -T root \; refresh-client -S \; refresh-client -S

# =====================================
# TAB MODE (exact zellij tab bindings)
# =====================================
bind-key -T tab-mode Left swap-window -t -1
bind-key -T tab-mode Right swap-window -t +1
bind-key -T tab-mode Down swap-window -t +1
bind-key -T tab-mode Up swap-window -t -1
bind-key -T tab-mode h swap-window -d -t -1 \; refresh-client -S
bind-key -T tab-mode j swap-window -d -t +1 \; refresh-client -S
bind-key -T tab-mode k swap-window -d -t -1 \; refresh-client -S
bind-key -T tab-mode l swap-window -d -t +1 \; refresh-client -S
bind-key -T tab-mode 1 select-window -t 1
bind-key -T tab-mode 2 select-window -t 2
bind-key -T tab-mode 3 select-window -t 3
bind-key -T tab-mode 4 select-window -t 4
bind-key -T tab-mode 5 select-window -t 5
bind-key -T tab-mode 6 select-window -t 6
bind-key -T tab-mode 7 select-window -t 7
bind-key -T tab-mode 8 select-window -t 8
bind-key -T tab-mode 9 select-window -t 9
bind-key -T tab-mode '[' break-pane -d -s '{left-of}'
bind-key -T tab-mode ']' break-pane -d -s '{right-of}'
bind-key -T tab-mode b break-pane
bind-key -T tab-mode n new-window -c "#{pane_current_path}"
bind-key -T tab-mode r command-prompt "rename-window '%%'"
bind-key -T tab-mode s run-shell "tmux set synchronize-panes #{?synchronize-panes,off,on}"
bind-key -T tab-mode x kill-window
bind-key -T tab-mode Tab last-window
bind-key -T tab-mode Escape switch-client -T root \; refresh-client -S

# =====================================
# RESIZE MODE (exact zellij resize bindings)
# =====================================
bind-key -T resize-mode Left resize-pane -L 5
bind-key -T resize-mode Down resize-pane -D 5
bind-key -T resize-mode Up resize-pane -U 5
bind-key -T resize-mode Right resize-pane -R 5
bind-key -T resize-mode h resize-pane -L 5
bind-key -T resize-mode j resize-pane -D 5
bind-key -T resize-mode k resize-pane -U 5
bind-key -T resize-mode l resize-pane -R 5
bind-key -T resize-mode H resize-pane -L 1
bind-key -T resize-mode J resize-pane -D 1
bind-key -T resize-mode K resize-pane -U 1
bind-key -T resize-mode L resize-pane -R 1
bind-key -T resize-mode + resize-pane -U 5
bind-key -T resize-mode - resize-pane -D 5
bind-key -T resize-mode = resize-pane -U 5
bind-key -T resize-mode Escape switch-client -T root \; refresh-client -S

# Move mode removed - not used

# =====================================
# SESSION MODE (enhanced zellij-like session bindings)
# =====================================
bind-key -T session-mode C-o switch-client -T root
bind-key -T session-mode C-s switch-client -T scroll-mode
bind-key -T session-mode d detach-client

# Enhanced session chooser with floating popup
bind-key -T session-mode w run-shell '~/.config/tmux/scripts/session-switcher-fzf.sh'

# Create new session (prompts for name)
bind-key -T session-mode c command-prompt -p "New session name:" "new-session -d -s '%%' ; switch-client -t '%%'"

# Create new session with auto-generated name
bind-key -T session-mode n run-shell 'tmux new-session -d -s "session-$(date +%s)" && tmux switch-client -t "session-$(date +%s)"'

# Delete/kill session (with confirmation)
bind-key -T session-mode x confirm-before -p "Kill session #S? (y/n)" kill-session
bind-key -T session-mode X kill-session  # Force kill without confirmation

# List all sessions
bind-key -T session-mode l run-shell 'tmux list-sessions | tmux display-message -d 5000'

# Rename current session
bind-key -T session-mode r command-prompt -p "Rename session:" "rename-session '%%'"

# Switch to previous session
bind-key -T session-mode p switch-client -l

# Session navigation shortcuts
bind-key -T session-mode 1 run-shell 'tmux switch-client -t $(tmux list-sessions -F "#{session_name}" | sed -n "1p") 2>/dev/null || tmux display-message "Session 1 not found"'
bind-key -T session-mode 2 run-shell 'tmux switch-client -t $(tmux list-sessions -F "#{session_name}" | sed -n "2p") 2>/dev/null || tmux display-message "Session 2 not found"'
bind-key -T session-mode 3 run-shell 'tmux switch-client -t $(tmux list-sessions -F "#{session_name}" | sed -n "3p") 2>/dev/null || tmux display-message "Session 3 not found"'

# Show session info
bind-key -T session-mode a display-message "Session: #S | Windows: #{session_windows} | Created: #{session_created}"

bind-key -T session-mode Escape switch-client -T root \; refresh-client -S

# =====================================
# WORKTREE MODE (git worktree management)
# =====================================
bind-key -n C-S-w switch-client -T worktree-mode \; refresh-client -S

# Worktree picker with fzf (list/switch/delete)
bind-key -T worktree-mode w run-shell '~/.config/tmux/scripts/worktree-picker-fzf.sh; if [ -f /tmp/tmux-switch-to-session ]; then tmux switch-client -t $(cat /tmp/tmux-switch-to-session) && rm -f /tmp/tmux-switch-to-session; fi'

# Create new worktree (prompts for ticket name)
bind-key -T worktree-mode c command-prompt -p "Ticket name:" "run-shell '~/.config/tmux/scripts/worktree-create.sh %%'"

# Delete current worktree (with confirmation)
bind-key -T worktree-mode x confirm-before -p "Delete worktree for session #S? (y/n)" "run-shell '~/.config/tmux/scripts/worktree-delete.sh'"

bind-key -T worktree-mode Escape switch-client -T root \; refresh-client -S

# =====================================
# SCROLL MODE (exact zellij scroll bindings)
# =====================================
bind-key -T scroll-mode C-c copy-mode -q
bind-key -T scroll-mode e new-window -n "scrollback" 'tmux capture-pane -p | ${EDITOR:-vi} -'
bind-key -T scroll-mode s copy-mode \; send-keys '/'
bind-key -T scroll-mode Escape switch-client -T root \; refresh-client -S

# Enable vi mode in copy mode (scroll mode)
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# =====================================
# TMUX MODE (exact zellij tmux bindings)
# =====================================
bind-key -T tmux-mode '[' copy-mode
bind-key -T tmux-mode C-b send-keys C-b
bind-key -T tmux-mode '"' split-window -v -c "#{pane_current_path}"
bind-key -T tmux-mode '%' split-window -h -c "#{pane_current_path}"
bind-key -T tmux-mode z run-shell '~/.config/tmux/scripts/toggle-fullscreen.sh'
bind-key -T tmux-mode c new-window -c "#{pane_current_path}"
bind-key -T tmux-mode ',' command-prompt "rename-window '%%'"
bind-key -T tmux-mode p previous-window
bind-key -T tmux-mode n next-window
bind-key -T tmux-mode Left select-pane -L
bind-key -T tmux-mode Right select-pane -R
bind-key -T tmux-mode Down select-pane -D
bind-key -T tmux-mode Up select-pane -U
bind-key -T tmux-mode h select-pane -L
bind-key -T tmux-mode l select-pane -R
bind-key -T tmux-mode j select-pane -D
bind-key -T tmux-mode k select-pane -U
bind-key -T tmux-mode o select-pane -t :.+
bind-key -T tmux-mode d detach-client
bind-key -T tmux-mode Space next-layout
bind-key -T tmux-mode x kill-pane
bind-key -T tmux-mode Escape switch-client -T root \; refresh-client -S

# =====================================
# LOCKED MODE (exact zellij locked bindings)
# =====================================
bind-key -T locked-mode C-S-g switch-client -T root

# =====================================
# COLORED PILL STATUS BAR (ZELLIJ RECREATION)
# =====================================

# Status bar colors (OneDark theme)
set -g status on
set -g status-bg "colour235"  # OneDark background
set -g status-fg "colour250"  # OneDark foreground

# Status bar at top for tabs
set -g status-position top
set -g status-justify left
set -g status-left " "
set -g status-right "#(~/.config/tmux/scripts/worktree-status.sh)"
set -g status-left-length 30
set -g status-right-length 50
set -g status-interval 0  # Minimize unnecessary updates

# Window/Tab list with OneDark colors
set -g window-status-format "#[fg=colour250,bg=colour236] #I #[fg=colour243]#W "
set -g window-status-current-format "#[fg=colour235,bg=colour114] #I #[fg=colour235,bold]#W "
set -g window-status-separator ""

# Message bar styling (for tmux messages)
set -g message-style "bg=black,fg=yellow"
set -g message-command-style "bg=black,fg=yellow"

# Disable pane border status completely
set -g pane-border-status off
set -g pane-border-style "fg=colour235"
set -g pane-active-border-style "fg=colour235"
set -g pane-border-lines single

# =====================================
# TMUX PLUGIN MANAGER (TPM)
# =====================================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other plugin configurations
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'off'
set -g @continuum-save-interval '1'  # Save every minute instead of 5
set -g @continuum-boot 'on'  # Start tmux on system boot
# Restore pane working directories
set -g @resurrect-processes 'false'
set -g @resurrect-save-command-strategy 'ps'

# Auto-save hooks - save state before any potentially destructive action
set-hook -g client-detached 'run-shell "~/.config/tmux/scripts/auto-save-restore.sh save"'
set-hook -g session-closed 'run-shell "~/.config/tmux/scripts/auto-save-restore.sh save"'
set-hook -g pane-died 'run-shell "~/.config/tmux/scripts/auto-save-restore.sh save"'

# =====================================
# BOTTOM STATUS PANE IMPLEMENTATION
# =====================================

# Create bottom pane for new windows automatically
set-hook -g after-new-window 'run-shell -b "~/.config/tmux/scripts/create-bottom-pane-for-window.sh #{session_name}:#{window_index}"'

# Create bottom panes for all windows when a new session is created
# DISABLED - handled by worktree session creation
# set-hook -g after-new-session 'run-shell -b "~/.config/tmux/scripts/setup-session-bottom-panes.sh #{session_name}"'

# Prevent selecting the bottom status pane
set-hook -g after-select-pane 'run-shell -b "~/.config/tmux/scripts/protect-bottom-pane.sh"'

# Resize bottom panes after client attaches or resizes
# DISABLED - too slow and unreliable
# set-hook -g client-attached 'run-shell -b "~/.config/tmux/scripts/resize-bottom-panes.sh #{session_name}"'
# set-hook -g client-resized 'run-shell -b "~/.config/tmux/scripts/resize-bottom-panes.sh #{session_name}"'
set-hook -g window-resized 'run-shell -b "~/.config/tmux/scripts/resize-all-status-bars.sh #{session_name}"'

# Keybind to toggle bottom status pane
bind-key b run-shell '~/.config/tmux/scripts/toggle-bottom-pane.sh'

# =====================================
# ADDITIONAL IMPROVEMENTS
# =====================================


# Force immediate refresh on all key table changes
set-hook -g client-session-changed 'refresh-client -S'
set-hook -g after-select-pane 'refresh-client -S'

# Reload config
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'