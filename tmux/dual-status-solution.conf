# =====================================
# DUAL STATUS BAR SOLUTION FOR TMUX
# =====================================
# Since tmux doesn't support true top+bottom bars, this solution uses
# a creative approach with tmux's command prompt feature

# Top status bar for window tabs (standard approach)
set -g status on
set -g status-position top
set -g status-justify left
set -g status-bg "colour235"
set -g status-fg "colour250"

# Window styling
set -g window-status-format "#[fg=colour250,bg=colour236] #I #[fg=colour243]#W "
set -g window-status-current-format "#[fg=colour235,bg=colour114] #I #[fg=colour235,bold]#W "
set -g window-status-separator ""

# Minimal status decoration
set -g status-left " "
set -g status-right "#[fg=colour243,bg=colour235] #S "

# Clean pane borders
set -g pane-border-status off
set -g pane-border-style "fg=colour235"
set -g pane-active-border-style "fg=colour235"

# =====================================
# BOTTOM BAR USING MESSAGE BAR HACK
# =====================================

# Use the message/command line as a pseudo bottom bar
set -g message-style "bg=colour235,fg=colour250"
set -g message-command-style "bg=colour235,fg=colour250"

# Create a function that continuously updates the message bar
# This creates a persistent bottom status effect
set-hook -g after-select-pane 'run-shell "~/.config/tmux/scripts/update-message-bar.sh"'
set-hook -g client-session-changed 'run-shell "~/.config/tmux/scripts/update-message-bar.sh"'
set-hook -g window-linked 'run-shell "~/.config/tmux/scripts/update-message-bar.sh"'

# Initialize the message bar on startup
run-shell "~/.config/tmux/scripts/update-message-bar.sh"